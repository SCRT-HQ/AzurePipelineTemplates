# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
- repo: self
  clean: true

trigger:
  branches:
    include:
      - refs/heads/master
  paths:
    include:
      - Preview.Dockerfile
      - Latest.Dockerfile
      - Test.Dockerfile
      - BuildDockerImages.yml
      - dockerImageBootstrap.ps1
      - build.ps1

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  always: true
  branches:
    include:
      - refs/heads/master

stages:
- stage: docker
  displayName: Build Docker Images
  jobs:
    - job: preview
      displayName: Build Preview Image
      pool:
        name: Hosted Ubuntu 1604
      steps:
        - task: Docker@2
          displayName: Login to DockerHub
          inputs:
            containerRegistry: DockerHub
            command: login
        - task: Docker@2
          displayName: Build Docker Image
          inputs:
            containerRegistry: DockerHub
            command: build
            repository: scrthq/powershell
            Dockerfile: Preview.Dockerfile
            tags: preview
        - pwsh: docker build . -t test -f TestPreview.Dockerfile
          displayName: Build container from image
        - pwsh: docker run --name test test
          displayName: Test Container
        - pwsh: docker container prune -f
          displayName: Clean up container
        - task: Docker@2
          displayName: Push to DockerHub
          inputs:
            containerRegistry: DockerHub
            command: push
            repository: scrthq/powershell
            Dockerfile: Preview.Dockerfile
            tags: preview
        - task: Docker@2
          displayName: Logout of DockerHub
          inputs:
            command: logout

    - job: latest
      displayName: Build Latest Image
      pool:
        name: Hosted Ubuntu 1604
      steps:
        - task: Docker@2
          displayName: Login to DockerHub
          inputs:
            containerRegistry: DockerHub
            command: login
        - task: Docker@2
          displayName: Build Docker Image
          inputs:
            containerRegistry: DockerHub
            command: build
            repository: scrthq/powershell
            Dockerfile: Latest.Dockerfile
            tags: latest
        - pwsh: docker build . -t test -f TestLatest.Dockerfile
          displayName: Build container from image
        - pwsh: docker run --name test test
          displayName: Test Container
        - pwsh: docker container prune -f
          displayName: Clean up container
        - task: Docker@2
          displayName: Push to DockerHub
          inputs:
            containerRegistry: DockerHub
            command: push
            repository: scrthq/powershell
            Dockerfile: Latest.Dockerfile
            tags: latest
        - task: Docker@2
          displayName: Logout of DockerHub
          inputs:
            command: logout
